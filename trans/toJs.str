module toJs

imports 
	src-gen/signatures/-
		
rules // top-level code generation function

	generate-js :
		(selected, position, ast, path, project-path) -> (filename, result)
		with
			filename := <guarantee-extension(|"js")> path;
			debug(!"Starting compilation...");
			result	 := <gen-js> ast;
			debug(!"Compilation finished!")

	//Thx bufferC :P
	mapsep(f | sep) =
		map(f); separate-by(|sep)

	gen-js : SourceFile(packageClause, imports, topLevelDecls) -> js
		where
			packageName := <package-name> packageClause;
			debug(!<concat-strings> ["Found source file for package '", packageName, "'"]);
			js := <concat-strings> <mapsep(gen-js|"\n")> topLevelDecls
			
	package-name : PackageClause(PackageName(name)) -> name
	
	gen-js : FunctionDecl(
		FunctionName(name),
		Function(
			Signature(parameters, returnType),
			FunctionBody(block)
		)
	) -> $[function [name] {[js]}]
		where
			debug(!<concat-strings> ["Found function ", name]);
			js := <gen-js> block
			
	gen-js : Block(statementList) -> js
		where
			statements := <statements-from-list> statementList;
			js := <mapsep(gen-js|"\n")> statements
	
	statements-from-list: StatementList(wrappedStatements) -> statements
		where
			statements := <map(unwrap-statement)> wrappedStatements
	
	unwrap-statement: StatementLine(statement) -> statement
	
	gen-js : PrintLn() -> "console.log()"
	