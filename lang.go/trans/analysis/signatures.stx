module analysis/signatures
// Signatures copied from src-gen/statix/signatures

signature

  sorts

  constructors

signature

  constructors
    Block : list(Stmt) -> Block
signature

  sorts
    TopLevelDecl
    ConstSpec
    IDList-OPT
    TypeSpec
    VarSpec
    Receiver
    ReceiverType

  constructors
    TopLevelDecl-Plhdr : TopLevelDecl
    ConstSpec-Plhdr : ConstSpec
    IDList-OPT-Plhdr : IDList-OPT
    TypeSpec-Plhdr : TypeSpec
    VarSpec-Plhdr : VarSpec
    Receiver-Plhdr : Receiver
    ReceiverType-Plhdr : ReceiverType

signature

  constructors
    Declaration2TopLevelDecl : Declaration -> TopLevelDecl
    FunctionDecl : ID * Signature -> TopLevelDecl
    FunctionDef : ID * Signature * Block -> TopLevelDecl
    MethodDecl : Receiver * ID * Signature -> TopLevelDecl
    MethodDed : Receiver * ID * Signature * Block -> TopLevelDecl
    SingleConstDecl : ConstSpec -> Declaration
    ConstDecl : list(ConstSpec) -> Declaration
    SingleTypeDecl : TypeSpec -> Declaration
    TypeDecl : list(TypeSpec) -> Declaration
    SingleVarDecl : VarSpec -> Declaration
    VarDecl : list(VarSpec) -> Declaration
    ConstSpec : list(ID) * Type-OPT * list(Expr) -> ConstSpec
    NoIDs : IDList-OPT
    IDs2IDList-OPT : list(ID) -> IDList-OPT
    NoExprs : ExprList-OPT
    Exprs2ExprList-OPT : list(Expr) -> ExprList-OPT
    AliasDecl : ID * Type -> TypeSpec
    TypeDef : ID * Type -> TypeSpec
    VarSpec : list(ID) * Type * list(Expr) -> VarSpec
    VarSpecNoInit : list(ID) * Type -> VarSpec
    VarSpecNoType : list(ID) * list(Expr) -> VarSpec
    Receiver : ID * ReceiverType -> Receiver
    AnonymousReceiver : ReceiverType -> Receiver
    ReceiverType : TypeName -> ReceiverType
    ReceiverPtrType : TypeName -> ReceiverType
signature

  sorts
    PrimaryExpr
    QualifiedIdent
    LiteralType
    LiteralValue
    KeyedElement
    Key
    Element
    Arguments-OPT
    Arguments

  constructors
    PrimaryExpr-Plhdr : PrimaryExpr
    QualifiedIdent-Plhdr : QualifiedIdent
    LiteralType-Plhdr : LiteralType
    LiteralValue-Plhdr : LiteralValue
    KeyedElement-Plhdr : KeyedElement
    Key-Plhdr : Key
    Element-Plhdr : Element
    Arguments-OPT-Plhdr : Arguments-OPT
    Arguments-Plhdr : Arguments

signature

  constructors
    NoExpr : Expr-OPT
    Expr2Expr-OPT : Expr -> Expr-OPT
    IntLit : INT_LIT -> PrimaryExpr
    FloatLit : FLOAT_LIT -> PrimaryExpr
    ImaginaryLit : IMAGINARY_LIT -> PrimaryExpr
    RuneLit : RUNE_LIT -> PrimaryExpr
    StringLit : STRING_LIT -> PrimaryExpr
    OperandName : ID -> PrimaryExpr
    FunctionLit : Signature * Block -> PrimaryExpr
    CompositeLit : LiteralType * LiteralValue -> PrimaryExpr
    Index : PrimaryExpr * Expr -> PrimaryExpr
    SliceLH : PrimaryExpr * Expr-OPT * Expr-OPT -> PrimaryExpr
    SliceLHM : PrimaryExpr * Expr-OPT * Expr * Expr -> PrimaryExpr
    TypeAssertion : PrimaryExpr * Type -> PrimaryExpr
    Call : PrimaryExpr * Arguments-OPT -> PrimaryExpr
    Call-DISAMB : PrimaryExpr * Arguments-OPT -> PrimaryExpr
    Conversion : Type * Expr -> PrimaryExpr
    Conversion-ALT : Type * Expr -> PrimaryExpr
    Conversion-DISAMB : Type * Expr -> PrimaryExpr
    Conversion-DISAMB-ALT : Type * Expr -> PrimaryExpr
    Selector : PrimaryExpr * ID -> PrimaryExpr
    Selector-DISAMB : PrimaryExpr * ID -> PrimaryExpr
    MethodExpr : Type * ID -> PrimaryExpr
    MethodExpr-DISAMB : Type * ID -> PrimaryExpr
    QualifiedOperandName : QualifiedIdent -> PrimaryExpr
    CallOrConversion : ID * Expr -> PrimaryExpr
    CallOrConversion-ALT : ID * Expr -> PrimaryExpr
    QualifiedCallOrConversion : QualifiedIdent * Expr -> PrimaryExpr
    QualifiedCallOrConversion-ALT : QualifiedIdent * Expr -> PrimaryExpr
    MemberAccess : ID * ID -> PrimaryExpr
    QualifiedIdent : ID * ID -> QualifiedIdent
    QualifiedIdent-DISAMB : ID * ID -> QualifiedIdent
    TypeName2LiteralType : TypeName -> LiteralType
    StructTypeLiteral : list(StructElement) -> LiteralType
    ArrayTypeLiteral : Expr * Type -> LiteralType
    AutoArrayTypeLiteral : Type -> LiteralType
    SliceTypeLiteral : Type -> LiteralType
    MapTypeLiteral : Type * Type -> LiteralType
    LiteralValue : list(KeyedElement) -> LiteralValue
    LiteralValue-ALT : list(KeyedElement) -> LiteralValue
    KeyedElement : Key * Element -> KeyedElement
    NoKey : Key
    FieldNameKey : ID -> Key
    ExprKey : Expr -> Key
    LiteralKey : LiteralValue -> Key
    Expr2Element : Expr -> Element
    LiteralValue2Element : LiteralValue -> Element
    NoArguments : Arguments-OPT
    Arguments : Arguments -> Arguments-OPT
    Arguments-ALT : Arguments -> Arguments-OPT
    ArgumentsExplode : Arguments -> Arguments-OPT
    ArgumentsExplode-ALT : Arguments -> Arguments-OPT
    ExprArguments : list(Expr) -> Arguments
    TypeArgument : Type -> Arguments
    TypedArguments : Type * list(Expr) -> Arguments
    LogicalOr : Expr * Expr -> Expr
    LogicalAnd : Expr * Expr -> Expr
    Equal : Expr * Expr -> Expr
    NotEqual : Expr * Expr -> Expr
    Less : Expr * Expr -> Expr
    LessOrEqual : Expr * Expr -> Expr
    Greater : Expr * Expr -> Expr
    GreaterOrEqual : Expr * Expr -> Expr
    Sum : Expr * Expr -> Expr
    Difference : Expr * Expr -> Expr
    BitwiseOr : Expr * Expr -> Expr
    BitwiseXor : Expr * Expr -> Expr
    Product : Expr * Expr -> Expr
    Quotient : Expr * Expr -> Expr
    Remainder : Expr * Expr -> Expr
    LeftShift : Expr * Expr -> Expr
    RightShift : Expr * Expr -> Expr
    BitwiseAnd : Expr * Expr -> Expr
    BitClear : Expr * Expr -> Expr
    PrimaryExpr2Expr : PrimaryExpr -> Expr
    Positive : Expr -> Expr
    Negation : Expr -> Expr
    Not : Expr -> Expr
    BitwiseComplement : Expr -> Expr
    Deref : Expr -> Expr
    Ref : Expr -> Expr
    Receive : Expr -> Expr
signature

  sorts
    TestSources
    TestSource

  constructors
    TestSources-Plhdr : TestSources
    TestSource-Plhdr : TestSource

signature

  constructors
    TestSources : list(TestSource) -> TestSources
    TestSourceFile : STRING_LIT * ID * list(ImportDecl) * list(TopLevelDecl) -> TestSource
signature

  sorts
    ID = string
    INT_LIT = string
    FLOAT_LIT = string
    IMAGINARY_LIT = string
    RUNE_LIT = string
    STRING_LIT = string

  constructors

signature

  constructors
signature

  sorts
    SourceFile
    ImportDecl
    ImportSpec
    ImportSpecQual

  constructors
    SourceFile-Plhdr : SourceFile
    ImportDecl-Plhdr : ImportDecl
    ImportSpec-Plhdr : ImportSpec
    ImportSpecQual-Plhdr : ImportSpecQual

signature

  constructors
    SourceFile : ID * list(ImportDecl) * list(TopLevelDecl) -> SourceFile
    SingleImportDecl : ImportSpec -> ImportDecl
    ImportDecl : list(ImportSpec) -> ImportDecl
    ImportSpec : ImportSpecQual * STRING_LIT -> ImportSpec
    Qual : ImportSpecQual
    Unqual : ImportSpecQual
    Alias : ID -> ImportSpecQual
signature

  sorts

  constructors

signature

  constructors
signature

  sorts
    Declaration
    Stmt
    Block
    Expr
    Expr-OPT
    ExprList-OPT
    Type
    Type-OPT
    TypeName
    Signature

  constructors
    Declaration-Plhdr : Declaration
    Stmt-Plhdr : Stmt
    Block-Plhdr : Block
    Expr-Plhdr : Expr
    Expr-OPT-Plhdr : Expr-OPT
    ExprList-OPT-Plhdr : ExprList-OPT
    Type-Plhdr : Type
    Type-OPT-Plhdr : Type-OPT
    TypeName-Plhdr : TypeName
    Signature-Plhdr : Signature

signature

  constructors
signature

  sorts
    SimpleStmt
    LabelOpt
    IfStmt
    IfStmtElse
    StmtInit
    ExprCaseClause
    TypeSwitchGuard
    TypeCaseClause
    ForStmtClause
    ForInitStmt
    ForCondition
    ForPostStmt
    ExprOrIdListEq
    CommClause
    CommCase
    RecvStmt
    SendStmt

  constructors
    SimpleStmt-Plhdr : SimpleStmt
    LabelOpt-Plhdr : LabelOpt
    IfStmt-Plhdr : IfStmt
    IfStmtElse-Plhdr : IfStmtElse
    StmtInit-Plhdr : StmtInit
    ExprCaseClause-Plhdr : ExprCaseClause
    TypeSwitchGuard-Plhdr : TypeSwitchGuard
    TypeCaseClause-Plhdr : TypeCaseClause
    ForStmtClause-Plhdr : ForStmtClause
    ForInitStmt-Plhdr : ForInitStmt
    ForCondition-Plhdr : ForCondition
    ForPostStmt-Plhdr : ForPostStmt
    ExprOrIdListEq-Plhdr : ExprOrIdListEq
    CommClause-Plhdr : CommClause
    CommCase-Plhdr : CommCase
    RecvStmt-Plhdr : RecvStmt
    SendStmt-Plhdr : SendStmt

signature

  constructors
    DeclarationStmt : Declaration -> Stmt
    SimpleStmt2Stmt : SimpleStmt -> Stmt
    Block2Stmt : Block -> Stmt
    IfStmt2Stmt : IfStmt -> Stmt
    LabeledStmt : ID * Stmt -> Stmt
    ExprSwitchStmt : StmtInit * Expr-OPT * list(ExprCaseClause) -> Stmt
    TypeSwitchStmt : StmtInit * TypeSwitchGuard * list(TypeCaseClause) -> Stmt
    ForStmt : ForStmtClause * Block -> Stmt
    GoStmt : Expr -> Stmt
    SelectStmt : list(CommClause) -> Stmt
    ReturnStmt : ExprList-OPT -> Stmt
    BreakStmt : LabelOpt -> Stmt
    ContinueStmt : LabelOpt -> Stmt
    GotoStmt : ID -> Stmt
    FallthroughStmt : Stmt
    DeferStmt : Expr -> Stmt
    EmptyStmt : SimpleStmt
    SendStmt2SimpleStmt : SendStmt -> SimpleStmt
    ExprStmt : Expr -> SimpleStmt
    IncStmt : Expr -> SimpleStmt
    DecStmt : Expr -> SimpleStmt
    ShortVarDecl : list(ID) * list(Expr) -> SimpleStmt
    AssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    SumAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    DifferenceAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    BitwiseOrAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    BitwiseXorAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    ProductAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    QuotientAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    RemainderAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    LeftShiftAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    RightShiftAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    BitwiseAndAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    BitClearAssignStmt : list(Expr) * list(Expr) -> SimpleStmt
    NoLabel : LabelOpt
    Label : ID -> LabelOpt
    IfStmt : StmtInit * Expr * Block * IfStmtElse -> IfStmt
    NoElse : IfStmtElse
    ElseBlock : Block -> IfStmtElse
    ElseIf : IfStmt -> IfStmtElse
    NoStmtInit : StmtInit
    StmtInit : SimpleStmt -> StmtInit
    ExprCase : list(Expr) * list(Stmt) -> ExprCaseClause
    ExprCaseDefault : list(Stmt) -> ExprCaseClause
    TypeSwitchGuard : ID * PrimaryExpr -> TypeSwitchGuard
    TypeSwitchGuardNoID : PrimaryExpr -> TypeSwitchGuard
    TypeCase : list(Type) * list(Stmt) -> TypeCaseClause
    TypeCaseDefault : list(Stmt) -> TypeCaseClause
    ForNoClause : ForStmtClause
    ForExprClause : Expr -> ForStmtClause
    ForClause : ForInitStmt * ForCondition * ForPostStmt -> ForStmtClause
    ForRangeClause : ExprOrIdListEq * Expr -> ForStmtClause
    NoInitStmt : ForInitStmt
    SimpleStmt2ForInitStmt : SimpleStmt -> ForInitStmt
    NoCondition : ForCondition
    Expr2ForCondition : Expr -> ForCondition
    NoPostStmt : ForPostStmt
    SimpleStmt2ForPostStmt : SimpleStmt -> ForPostStmt
    ExprListEq : list(Expr) -> ExprOrIdListEq
    IdListEq : list(ID) -> ExprOrIdListEq
    CommClause : CommCase * list(Stmt) -> CommClause
    CommCaseSend : SendStmt -> CommCase
    CommCaseRecv : RecvStmt -> CommCase
    CommCaseDefault : CommCase
    RecvStmt : ExprOrIdListEq * Expr -> RecvStmt
    SendStmt : Expr * Expr -> SendStmt
signature

  sorts
    Field
    Tag
    StructElement
    Result
    Parameters
    ParameterDecl
    InterfaceTypeMember

  constructors
    Field-Plhdr : Field
    Tag-Plhdr : Tag
    StructElement-Plhdr : StructElement
    Result-Plhdr : Result
    Parameters-Plhdr : Parameters
    ParameterDecl-Plhdr : ParameterDecl
    InterfaceTypeMember-Plhdr : InterfaceTypeMember

signature

  constructors
    NoType : Type-OPT
    Type2Type-OPT : Type -> Type-OPT
    TypeName : ID -> TypeName
    QualifiedTypeName : QualifiedIdent -> TypeName
    TypeName2Type : TypeName -> Type
    PointerType : Type -> Type
    ArrayType : Expr * Type -> Type
    SliceType : Type -> Type
    StructType : list(StructElement) -> Type
    FunctionType : Signature -> Type
    InterfaceType : list(InterfaceTypeMember) -> Type
    MapType : Type * Type -> Type
    BidirectionalChannelType : Type -> Type
    SendingChannelType : Type -> Type
    ReceivingChannelType : Type -> Type
    StructElement : Field * Tag -> StructElement
    Field : list(ID) * Type -> Field
    AnonymousPtrField : TypeName -> Field
    AnonymousField : TypeName -> Field
    NoTag : Tag
    Tag : STRING_LIT -> Tag
    Signature : Parameters * Result -> Signature
    NoResult : Result
    Parameters2Result : Parameters -> Result
    Type2Result : Type -> Result
    Parameters : list(ParameterDecl) -> Parameters
    Parameters-ALT : list(ParameterDecl) -> Parameters
    ParameterDecl : IDList-OPT * Type -> ParameterDecl
    VariadicParameterDecl : IDList-OPT * Type -> ParameterDecl
    MethodSpec : ID * Signature -> InterfaceTypeMember
    EmbeddedInterface : TypeName -> InterfaceTypeMember
