module analysis/signatures
// Signatures copied from src-gen/statix/signatures

signature

  sorts
    StmtList-ELEM

  constructors
    StmtList-ELEM-Plhdr : StmtList-ELEM

signature

  constructors
    Block : list(StmtList-ELEM) -> Block
    Stmt2StmtList-ELEM : Stmt -> StmtList-ELEM
signature

  sorts
    TopLevelDecl
    ConstSpec-ELEM
    ConstSpec
    IDList
    IDList-OPT
    TypeSpec-ELEM
    TypeSpec
    VarSpec-ELEM
    VarSpec
    Receiver
    Receiver-INNER

  constructors
    TopLevelDecl-Plhdr : TopLevelDecl
    ConstSpec-ELEM-Plhdr : ConstSpec-ELEM
    ConstSpec-Plhdr : ConstSpec
    IDList-Plhdr : IDList
    IDList-OPT-Plhdr : IDList-OPT
    TypeSpec-ELEM-Plhdr : TypeSpec-ELEM
    TypeSpec-Plhdr : TypeSpec
    VarSpec-ELEM-Plhdr : VarSpec-ELEM
    VarSpec-Plhdr : VarSpec
    Receiver-Plhdr : Receiver
    Receiver-INNER-Plhdr : Receiver-INNER

signature

  constructors
    Declaration2TopLevelDecl : Declaration -> TopLevelDecl
    SingleConstDecl : ConstSpec -> Declaration
    ConstDecl : list(ConstSpec-ELEM) -> Declaration
    ConstSpec2ConstSpec-ELEM : ConstSpec -> ConstSpec-ELEM
    ConstSpec : IDList * Type-OPT * ExprList -> ConstSpec
    IDs2IDList : list(ID) -> IDList
    NoIDs : IDList-OPT
    IDList2IDList-OPT : IDList -> IDList-OPT
    Exprs2ExprList : list(Expr) -> ExprList
    NoExprs : ExprList-OPT
    ExprList2ExprList-OPT : ExprList -> ExprList-OPT
    SingleTypeDecl : TypeSpec -> Declaration
    TypeDecl : list(TypeSpec-ELEM) -> Declaration
    TypeSpec2TypeSpec-ELEM : TypeSpec -> TypeSpec-ELEM
    AliasDecl : ID * Type -> TypeSpec
    TypeDef : ID * Type -> TypeSpec
    SingleVarDecl : VarSpec -> Declaration
    VarDecl : list(VarSpec-ELEM) -> Declaration
    VarSpec2VarSpec-ELEM : VarSpec -> VarSpec-ELEM
    VarSpec : IDList * Type * ExprList -> VarSpec
    VarSpecNoInit : IDList * Type -> VarSpec
    VarSpecNoType : IDList * ExprList -> VarSpec
    FunctionDecl : ID * Signature -> TopLevelDecl
    FunctionDef : ID * Signature * Block -> TopLevelDecl
    MethodDecl : Receiver * ID * Signature -> TopLevelDecl
    MethodDed : Receiver * ID * Signature * Block -> TopLevelDecl
    Receiver : ID * Receiver-INNER -> Receiver
    AnonymousReceiver : Receiver-INNER -> Receiver
    ReceiverType : TypeName -> Receiver-INNER
    ReceiverPtrType : TypeName -> Receiver-INNER
signature

  sorts
    PrimaryExpr
    QualifiedIdent
    LiteralType
    LiteralValue
    KeyedElement
    Key
    Element
    Arguments-OPT
    Arguments

  constructors
    PrimaryExpr-Plhdr : PrimaryExpr
    QualifiedIdent-Plhdr : QualifiedIdent
    LiteralType-Plhdr : LiteralType
    LiteralValue-Plhdr : LiteralValue
    KeyedElement-Plhdr : KeyedElement
    Key-Plhdr : Key
    Element-Plhdr : Element
    Arguments-OPT-Plhdr : Arguments-OPT
    Arguments-Plhdr : Arguments

signature

  constructors
    NoExpr : Expr-OPT
    Expr2Expr-OPT : Expr -> Expr-OPT
    IntLit : INT_LIT -> PrimaryExpr
    FloatLit : FLOAT_LIT -> PrimaryExpr
    ImaginaryLit : IMAGINARY_LIT -> PrimaryExpr
    RuneLit : RUNE_LIT -> PrimaryExpr
    StringLit : STRING_LIT -> PrimaryExpr
    OperandName : ID -> PrimaryExpr
    FunctionLit : Signature * Block -> PrimaryExpr
    CompositeLit : LiteralType * LiteralValue -> PrimaryExpr
    Index : PrimaryExpr * Expr -> PrimaryExpr
    SliceLH : PrimaryExpr * Expr-OPT * Expr-OPT -> PrimaryExpr
    SliceLHM : PrimaryExpr * Expr-OPT * Expr * Expr -> PrimaryExpr
    TypeAssertion : PrimaryExpr * Type -> PrimaryExpr
    Call : PrimaryExpr * Arguments-OPT -> PrimaryExpr
    Call-DISAMB : PrimaryExpr * Arguments-OPT -> PrimaryExpr
    Conversion : Type * Expr -> PrimaryExpr
    Conversion-ALT : Type * Expr -> PrimaryExpr
    Conversion-DISAMB : Type * Expr -> PrimaryExpr
    Conversion-DISAMB-ALT : Type * Expr -> PrimaryExpr
    Selector : PrimaryExpr * ID -> PrimaryExpr
    Selector-DISAMB : PrimaryExpr * ID -> PrimaryExpr
    MethodExpr : Type * ID -> PrimaryExpr
    MethodExpr-DISAMB : Type * ID -> PrimaryExpr
    QualifiedOperandName : QualifiedIdent -> PrimaryExpr
    CallOrConversion : ID * Expr -> PrimaryExpr
    CallOrConversion-ALT : ID * Expr -> PrimaryExpr
    QualifiedCallOrConversion : QualifiedIdent * Expr -> PrimaryExpr
    QualifiedCallOrConversion-ALT : QualifiedIdent * Expr -> PrimaryExpr
    MemberAccess : ID * ID -> PrimaryExpr
    QualifiedIdent : ID * ID -> QualifiedIdent
    QualifiedIdent-DISAMB : ID * ID -> QualifiedIdent
    StructType2LiteralType : StructType -> LiteralType
    ArrayType2LiteralType : ArrayType -> LiteralType
    AutoArrayType : Type -> LiteralType
    SliceType2LiteralType : SliceType -> LiteralType
    MapType2LiteralType : MapType -> LiteralType
    TypeName2LiteralType : TypeName -> LiteralType
    LiteralValue : list(KeyedElement) -> LiteralValue
    LiteralValue-ALT : list(KeyedElement) -> LiteralValue
    KeyedElement : Key * Element -> KeyedElement
    NoKey : Key
    FieldNameKey : ID -> Key
    ExprKey : Expr -> Key
    LiteralKey : LiteralValue -> Key
    Expr2Element : Expr -> Element
    LiteralValue2Element : LiteralValue -> Element
    NoArguments : Arguments-OPT
    Arguments : Arguments -> Arguments-OPT
    Arguments-ALT : Arguments -> Arguments-OPT
    ArgumentsExplode : Arguments -> Arguments-OPT
    ArgumentsExplode-ALT : Arguments -> Arguments-OPT
    ExprArguments : ExprList -> Arguments
    TypeArgument : Type -> Arguments
    TypedArguments : Type * ExprList -> Arguments
    LogicalOr : Expr * Expr -> Expr
    LogicalAnd : Expr * Expr -> Expr
    Equal : Expr * Expr -> Expr
    NotEqual : Expr * Expr -> Expr
    Less : Expr * Expr -> Expr
    LessOrEqual : Expr * Expr -> Expr
    Greater : Expr * Expr -> Expr
    GreaterOrEqual : Expr * Expr -> Expr
    Sum : Expr * Expr -> Expr
    Difference : Expr * Expr -> Expr
    BitwiseOr : Expr * Expr -> Expr
    BitwiseXor : Expr * Expr -> Expr
    Product : Expr * Expr -> Expr
    Quotient : Expr * Expr -> Expr
    Remainder : Expr * Expr -> Expr
    LeftShift : Expr * Expr -> Expr
    RightShift : Expr * Expr -> Expr
    BitwiseAnd : Expr * Expr -> Expr
    BitClear : Expr * Expr -> Expr
    PrimaryExpr2Expr : PrimaryExpr -> Expr
    Positive : Expr -> Expr
    Negation : Expr -> Expr
    Not : Expr -> Expr
    BitwiseComplement : Expr -> Expr
    Deref : Expr -> Expr
    Ref : Expr -> Expr
    Receive : Expr -> Expr
signature

  sorts
    TestSources
    TestSource

  constructors
    TestSources-Plhdr : TestSources
    TestSource-Plhdr : TestSource

signature

  constructors
    TestSources : list(TestSource) -> TestSources
    TestSourceFile : ImportPath * PackageClause * list(ImportDecl-ELEM) * list(TopLevelDecl-ELEM) -> TestSource
signature

  sorts
    ID = string
    INT_LIT = string
    FLOAT_LIT = string
    IMAGINARY_LIT = string
    RUNE_LIT = string
    STRING_LIT = string

  constructors

signature

  constructors
signature

  sorts
    SourceFile
    ImportDecl-ELEM
    TopLevelDecl-ELEM
    PackageClause
    ImportDecl
    ImportSpec-ELEM
    ImportSpec
    ImportSpecQual
    ImportPath

  constructors
    SourceFile-Plhdr : SourceFile
    ImportDecl-ELEM-Plhdr : ImportDecl-ELEM
    TopLevelDecl-ELEM-Plhdr : TopLevelDecl-ELEM
    PackageClause-Plhdr : PackageClause
    ImportDecl-Plhdr : ImportDecl
    ImportSpec-ELEM-Plhdr : ImportSpec-ELEM
    ImportSpec-Plhdr : ImportSpec
    ImportSpecQual-Plhdr : ImportSpecQual
    ImportPath-Plhdr : ImportPath

signature

  constructors
    SourceFile : PackageClause * list(ImportDecl-ELEM) * list(TopLevelDecl-ELEM) -> SourceFile
    ImportDecl2ImportDecl-ELEM : ImportDecl -> ImportDecl-ELEM
    TopLevelDecl2TopLevelDecl-ELEM : TopLevelDecl -> TopLevelDecl-ELEM
    PackageClause : ID -> PackageClause
    SingleImportDecl : ImportSpec -> ImportDecl
    ImportDecl : list(ImportSpec-ELEM) -> ImportDecl
    ImportSpec2ImportSpec-ELEM : ImportSpec -> ImportSpec-ELEM
    ImportSpec : ImportSpecQual * ImportPath -> ImportSpec
    Qual : ImportSpecQual
    Unqual : ImportSpecQual
    Alias : ID -> ImportSpecQual
    STRING_LIT2ImportPath : STRING_LIT -> ImportPath
signature

  sorts

  constructors

signature

  constructors
signature

  sorts
    Declaration
    Stmt
    Block
    Expr
    Expr-OPT
    ExprList
    ExprList-OPT
    Type
    Type-OPT
    TypeName
    Signature

  constructors
    Declaration-Plhdr : Declaration
    Stmt-Plhdr : Stmt
    Block-Plhdr : Block
    Expr-Plhdr : Expr
    Expr-OPT-Plhdr : Expr-OPT
    ExprList-Plhdr : ExprList
    ExprList-OPT-Plhdr : ExprList-OPT
    Type-Plhdr : Type
    Type-OPT-Plhdr : Type-OPT
    TypeName-Plhdr : TypeName
    Signature-Plhdr : Signature

signature

  constructors
signature

  sorts
    SimpleStmt
    Label
    Label-OPT
    SendStmt
    Channel
    IfStmt
    IfStmt-INNER-OPT
    IfStmt-INNER
    StmtInit-OPT
    ExprSwitchStmt
    ExprCaseClause
    ExprSwitchCase
    TypeSwitchStmt
    TypeSwitchGuard
    TypeCaseClause
    TypeSwitchCase
    TypeList
    ForStmt-INNER-OPT
    ForStmt-INNER
    Condition
    ForClause
    InitStmt-OPT
    InitStmt
    Condition-OPT
    PostStmt-OPT
    PostStmt
    RangeClause
    ExprOrIdListEq
    CommClause
    CommCase
    RecvStmt
    RecvExpr

  constructors
    SimpleStmt-Plhdr : SimpleStmt
    Label-Plhdr : Label
    Label-OPT-Plhdr : Label-OPT
    SendStmt-Plhdr : SendStmt
    Channel-Plhdr : Channel
    IfStmt-Plhdr : IfStmt
    IfStmt-INNER-OPT-Plhdr : IfStmt-INNER-OPT
    IfStmt-INNER-Plhdr : IfStmt-INNER
    StmtInit-OPT-Plhdr : StmtInit-OPT
    ExprSwitchStmt-Plhdr : ExprSwitchStmt
    ExprCaseClause-Plhdr : ExprCaseClause
    ExprSwitchCase-Plhdr : ExprSwitchCase
    TypeSwitchStmt-Plhdr : TypeSwitchStmt
    TypeSwitchGuard-Plhdr : TypeSwitchGuard
    TypeCaseClause-Plhdr : TypeCaseClause
    TypeSwitchCase-Plhdr : TypeSwitchCase
    TypeList-Plhdr : TypeList
    ForStmt-INNER-OPT-Plhdr : ForStmt-INNER-OPT
    ForStmt-INNER-Plhdr : ForStmt-INNER
    Condition-Plhdr : Condition
    ForClause-Plhdr : ForClause
    InitStmt-OPT-Plhdr : InitStmt-OPT
    InitStmt-Plhdr : InitStmt
    Condition-OPT-Plhdr : Condition-OPT
    PostStmt-OPT-Plhdr : PostStmt-OPT
    PostStmt-Plhdr : PostStmt
    RangeClause-Plhdr : RangeClause
    ExprOrIdListEq-Plhdr : ExprOrIdListEq
    CommClause-Plhdr : CommClause
    CommCase-Plhdr : CommCase
    RecvStmt-Plhdr : RecvStmt
    RecvExpr-Plhdr : RecvExpr

signature

  constructors
    DeclarationStmt : Declaration -> Stmt
    SimpleStmt2Stmt : SimpleStmt -> Stmt
    Block2Stmt : Block -> Stmt
    IfStmt2Stmt : IfStmt -> Stmt
    SendStmt2SimpleStmt : SendStmt -> SimpleStmt
    EmptyStmt : SimpleStmt
    LabeledStmt : Label * Stmt -> Stmt
    Label : ID -> Label
    NoLabel : Label-OPT
    Label2Label-OPT : Label -> Label-OPT
    ExprStmt : Expr -> SimpleStmt
    SendStmt : Channel * Expr -> SendStmt
    Expr2Channel : Expr -> Channel
    IncStmt : Expr -> SimpleStmt
    DecStmt : Expr -> SimpleStmt
    AssignStmt : ExprList * ExprList -> SimpleStmt
    SumAssignStmt : ExprList * ExprList -> SimpleStmt
    DifferenceAssignStmt : ExprList * ExprList -> SimpleStmt
    BitwiseOrAssignStmt : ExprList * ExprList -> SimpleStmt
    BitwiseXorAssignStmt : ExprList * ExprList -> SimpleStmt
    ProductAssignStmt : ExprList * ExprList -> SimpleStmt
    QuotientAssignStmt : ExprList * ExprList -> SimpleStmt
    RemainderAssignStmt : ExprList * ExprList -> SimpleStmt
    LeftShiftAssignStmt : ExprList * ExprList -> SimpleStmt
    RightShiftAssignStmt : ExprList * ExprList -> SimpleStmt
    BitwiseAndAssignStmt : ExprList * ExprList -> SimpleStmt
    BitClearAssignStmt : ExprList * ExprList -> SimpleStmt
    ShortVarDecl : IDList * ExprList -> SimpleStmt
    IfStmt : StmtInit-OPT * Expr * Block * IfStmt-INNER-OPT -> IfStmt
    NoIfElse : IfStmt-INNER-OPT
    IfStmt-INNER2IfStmt-INNER-OPT : IfStmt-INNER -> IfStmt-INNER-OPT
    Block2IfStmt-INNER : Block -> IfStmt-INNER
    IfStmt2IfStmt-INNER : IfStmt -> IfStmt-INNER
    NoStmtInit : StmtInit-OPT
    StmtInit : SimpleStmt -> StmtInit-OPT
    ExprSwitchStmt2Stmt : ExprSwitchStmt -> Stmt
    TypeSwitchStmt2Stmt : TypeSwitchStmt -> Stmt
    ExprSwitch : StmtInit-OPT * Expr-OPT * list(ExprCaseClause) -> ExprSwitchStmt
    ExprCaseClause : ExprSwitchCase * list(StmtList-ELEM) -> ExprCaseClause
    ExprSwitchCase : ExprList -> ExprSwitchCase
    ExprSwitchDefault : ExprSwitchCase
    TypeSwitch : StmtInit-OPT * TypeSwitchGuard * list(TypeCaseClause) -> TypeSwitchStmt
    TypeSwitchGuard : ID * PrimaryExpr -> TypeSwitchGuard
    TypeSwitchGuardNoID : PrimaryExpr -> TypeSwitchGuard
    TypeCaseClause : TypeSwitchCase * list(StmtList-ELEM) -> TypeCaseClause
    TypeSwitchCase : TypeList -> TypeSwitchCase
    TypeSwitchDefault : TypeSwitchCase
    Types2TypeList : list(Type) -> TypeList
    ForStmt : ForStmt-INNER-OPT * Block -> Stmt
    NoClause : ForStmt-INNER-OPT
    ForStmt-INNER2ForStmt-INNER-OPT : ForStmt-INNER -> ForStmt-INNER-OPT
    Condition2ForStmt-INNER : Condition -> ForStmt-INNER
    ForClause2ForStmt-INNER : ForClause -> ForStmt-INNER
    RangeClause2ForStmt-INNER : RangeClause -> ForStmt-INNER
    Expr2Condition : Expr -> Condition
    ForClause : InitStmt-OPT * Condition-OPT * PostStmt-OPT -> ForClause
    NoInitStmt : InitStmt-OPT
    InitStmt2InitStmt-OPT : InitStmt -> InitStmt-OPT
    SimpleStmt2InitStmt : SimpleStmt -> InitStmt
    NoCondition : Condition-OPT
    Condition2Condition-OPT : Condition -> Condition-OPT
    NoPostStmt : PostStmt-OPT
    PostStmt2PostStmt-OPT : PostStmt -> PostStmt-OPT
    SimpleStmt2PostStmt : SimpleStmt -> PostStmt
    RangeClause : ExprOrIdListEq * Expr -> RangeClause
    ExprListEq : ExprList -> ExprOrIdListEq
    IdListEq : IDList -> ExprOrIdListEq
    GoStmt : Expr -> Stmt
    Select : list(CommClause) -> Stmt
    CommClause : CommCase * list(StmtList-ELEM) -> CommClause
    CommCaseSend : SendStmt -> CommCase
    CommCaseRecv : RecvStmt -> CommCase
    CommCaseDefault : CommCase
    RecvStmt : ExprOrIdListEq * RecvExpr -> RecvStmt
    Expr2RecvExpr : Expr -> RecvExpr
    ReturnStmt : ExprList-OPT -> Stmt
    BreakStmt : Label-OPT -> Stmt
    ContinueStmt : Label-OPT -> Stmt
    GotoStmt : Label -> Stmt
    FallthroughStmt : Stmt
    DeferStmt : Expr -> Stmt
signature

  sorts
    ArrayType
    SliceType
    StructType
    StructType-ELEM
    FieldDecl
    Field
    Tag-OPT
    Tag
    Result
    Parameters
    ParameterDecl
    InterfaceTypeMember
    MapType

  constructors
    ArrayType-Plhdr : ArrayType
    SliceType-Plhdr : SliceType
    StructType-Plhdr : StructType
    StructType-ELEM-Plhdr : StructType-ELEM
    FieldDecl-Plhdr : FieldDecl
    Field-Plhdr : Field
    Tag-OPT-Plhdr : Tag-OPT
    Tag-Plhdr : Tag
    Result-Plhdr : Result
    Parameters-Plhdr : Parameters
    ParameterDecl-Plhdr : ParameterDecl
    InterfaceTypeMember-Plhdr : InterfaceTypeMember
    MapType-Plhdr : MapType

signature

  constructors
    TypeName2Type : TypeName -> Type
    NoType : Type-OPT
    Type2Type-OPT : Type -> Type-OPT
    ID2TypeName : ID -> TypeName
    QualifiedTypeName : QualifiedIdent -> TypeName
    ArrayType2Type : ArrayType -> Type
    StructType2Type : StructType -> Type
    SliceType2Type : SliceType -> Type
    MapType2Type : MapType -> Type
    PointerType : Type -> Type
    ArrayType : Expr * Type -> ArrayType
    SliceType : Type -> SliceType
    StructType : list(StructType-ELEM) -> StructType
    FieldDecl2StructType-ELEM : FieldDecl -> StructType-ELEM
    FieldDecl : Field * Tag-OPT -> FieldDecl
    Field : IDList * Type -> Field
    AnonymousPtrField : TypeName -> Field
    AnonymousField : TypeName -> Field
    NoTag : Tag
    Tag : STRING_LIT -> Tag
    FunctionType : Signature -> Type
    Signature : Parameters * Result -> Signature
    NoResult : Result
    Parameters2Result : Parameters -> Result
    Type2Result : Type -> Result
    Parameters : list(ParameterDecl) -> Parameters
    Parameters-ALT : list(ParameterDecl) -> Parameters
    ParameterDecl : IDList-OPT * Type -> ParameterDecl
    VariadicParameterDecl : IDList-OPT * Type -> ParameterDecl
    InterfaceType : list(InterfaceTypeMember) -> Type
    MethodSpec : ID * Signature -> InterfaceTypeMember
    TypeName : TypeName -> InterfaceTypeMember
    MapType : Type * Type -> MapType
    BidirectionalChannelType : Type -> Type
    SendingChannelType : Type -> Type
    ReceivingChannelType : Type -> Type
