module desugar

imports

  libspoofax/resource/path
  libspoofax/term/origin

  signatures/-

signature
  constructors
    SourceFile : ImportPath * PackageName * ImportDecls * TopLevelDecls -> SourceFile
    Elements   : ElementList -> LiteralValue-Inner
    Parameters : ParameterList -> Parameters-Inner
    Bind	   : StringLit * IntLit -> Bind
    ArgumentsPackage : QualifiedIdent -> ArgumentsPackage

rules

  desugar-all = 
    try(desugar-sourcefile);
    desugar-short-var-decls;
    desugar-single-decls;
    desugar-test;
    desugar-opts

//at the start of generate -> list parameter
rules

  desugar-sourcefile:
      file@SourceFile(name, imports, decls) -> SourceFile(pkg-path, name, imports, decls)
    with 
    	file-path := <origin-file> file;
     	pkg-path  := <current-language-relative-source-or-include-path;dirname> file-path


desugar-test:
      SourceFile(pkg-path, name, imports, decls) -> SourceFile(pkg-path, name, imports, declsnew)
    with 
 		declsnew := <annotate-var-decls> decls //different strategy

annotate-var-decls: ast -> annotated-ast
  	with
		var-decl-list := <collect-all(multivardecl)> ast;
		var-decl-indices := <make-index> var-decl-list; 
		annotated-ast := <topdown(try(index-var-decl(|var-decl-indices)))> ast
    
make-index:
	multivardecls -> lst1
	where
		lst1 := <map(get-var-name); concat> multivardecls; debug
  
index-var-decl(|var-decl-indices): 
	MultiVarDecl([VarSpec(varlist,expr)]) -> MultiVarDecl([VarSpec(bindlst,expr)])
  	with
  		bindlst:= <map(var-index(|var-decl-indices))> varlist
	
var-index(|var-decl-indices):
	varname -> Bind(varname,index)
	where
		index := <get-index> (varname, var-decl-indices)
	
multivardecl:
	MultiVarDecl(x) -> MultiVarDecl(x)

get-var-name:
	MultiVarDecl([VarSpec(varlist,_)]) -> varlist

rules

  desugar-short-var-decls =
    topdown(try(desugar-short-var-decl))
  
  desugar-short-var-decl:
      ShortVarDecl(ids, exprs) -> SingleVarDecl(VarSpec(ids,Untyped(VarAssign(exprs))))

rules

  desugar-single-decls =
    topdown(try(desugar-single-decl)) 
 
  desugar-single-decl:
      SingleImportDecl(import-spec) -> MultiImportDecl([import-spec])

  desugar-single-decl:
    SingleConstDecl(const-spec) -> MultiConstDecl([const-spec])

  desugar-single-decl:
    SingleTypeDecl(type-spec) -> MultiTypeDecl([type-spec])

  desugar-single-decl:
    SingleVarDecl(var-spec) -> MultiVarDecl([var-spec])

  		

rules

  desugar-opts = topdown(try(desugar-opt))
  
  desugar-opt: NoParameters() -> []
  desugar-opt: Parameters(params,_) -> params
  
  desugar-opt: NoElements() -> []
  desugar-opt: Elements(elems,_) -> elems
 
  desugar-opt: NoIdentifiers() -> []

  desugar-opt: NoExpressions() -> []
  
  desugar-opt : Bind(Bind(x,int),_) -> Bind(x,int)
