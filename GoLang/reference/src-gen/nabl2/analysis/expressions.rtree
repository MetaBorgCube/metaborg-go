Module("analysis/expressions",[Imports([ImportWildcard("signatures/nabl2/shared"),ImportWildcard("signatures/nabl2/shared/common"),ImportWildcard("signatures/nabl2/shared/constraints"),ImportWildcard("nabl2/shared"),ImportWildcard("signatures/nabl2/runtime"),ImportWildcard("signatures/nabl2/runtime/analysis"),ImportWildcard("signatures/nabl2/runtime/common"),ImportWildcard("signatures/nabl2/runtime/solver"),ImportWildcard("nabl2/runtime"),ImportWildcard("nabl2/runtime/analysis"),ImportWildcard("nabl2/runtime/common"),ImportWildcard("nabl2/runtime/editor"),ImportWildcard("nabl2/runtime/prelude"),ImportWildcard("nabl2/runtime/solver"),ImportWildcard("nabl2/runtime/stdlib")]),Rules([]),Imports([ImportWildcard("signatures"),ImportWildcard("reference/src-gen/nabl2/analysis")]),Rules([RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("VarRef",[Var("'id")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("ty"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : ty\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"VarRef('id)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("d"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"d\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CGRef",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Var\""))])),Var("'id"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("'id"))])),Var("s")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CResolve",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Var\""))])),Var("'id"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("'id"))])),Var("d"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CPropertyOf",[Var("d"),NoAnnoList(Op("Type",[])),Var("ty"),NoAnnoList(Str("\"\"")),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("True",[]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"True()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Id),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CTrue",[]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("False",[]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"False()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Id),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CTrue",[]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("This",[]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("ty"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : ty\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"This()\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("d"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"d\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CGRef",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Implicit\""))])),NoAnnoList(Op("This",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))])),Var("s")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CResolve",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Implicit\""))])),NoAnnoList(Op("This",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))])),Var("d"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CPropertyOf",[Var("d"),NoAnnoList(Op("Type",[])),Var("ty"),NoAnnoList(Str("\"\"")),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("IntValue",[Wld]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"IntValue(_)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Id),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CTrue",[]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("UnExp",[NoAnnoList(Op("NotOp",[])),Var("e")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"UnExp(NotOp(), e)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty")]))]),Var("e")),NoAnnoList(Op("CEqual",[Var("ty"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("Plus",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(Plus(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("Minus",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(Minus(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("Times",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(Times(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("LtOp",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(LtOp(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("AndOp",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(AndOp(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Bool",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("Call",[Var("e"),Var("x"),Var("ee")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("frty"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : frty\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"Call(e, x, ee)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("d"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"d\"")))),Seq(Assign(Var("cs"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"cs\"")))),Seq(Assign(Var("m"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"m\"")))),Seq(Assign(Var("aaaty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"aaaty\"")))),Seq(Assign(Var("faaty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"faaty\"")))),Id)))))),WithClause(Seq(Assign(Var("s'"),App(CallT(SVar("nabl2--new-scope"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"s'\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),NoAnnoList(Op("ClassType",[Var("d")]))]))]),Var("e")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CAssoc",[Var("d"),NoAnnoList(Op("I",[])),Var("cs"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CGDirectEdge",[Var("s'"),NoAnnoList(Op("I",[])),Var("cs")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CGRef",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Method\""))])),Var("x"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))])),Var("s'")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CResolve",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Method\""))])),Var("x"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))])),Var("m"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CPropertyOf",[Var("m"),NoAnnoList(Op("Type",[])),NoAnnoList(Op("MethodType",[Var("frty"),Var("faaty")])),NoAnnoList(Str("\"\"")),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-Map1T-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("aaaty")]))]),Var("ee")),NoAnnoList(Op("CSubtype",[Var("aaaty"),Var("faaty"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch in method arguments\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))]))]))]))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("UnExp",[NoAnnoList(Op("NewArrayOp",[])),Var("e")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"UnExp(NewArrayOp(), e)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("IntArray",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty")]))]),Var("e")),NoAnnoList(Op("CEqual",[Var("ty"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("BinExp",[NoAnnoList(Op("SubscriptOp",[])),Var("e1"),Var("e2")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"BinExp(SubscriptOp(), e1, e2)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty1"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty1\"")))),Seq(Assign(Var("ty2"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty2\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty1")]))]),Var("e1")),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("ty1"),NoAnnoList(Op("IntArray",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e1"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty2")]))]),Var("e2")),NoAnnoList(Op("CEqual",[Var("ty2"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e2"))]))]))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("UnExp",[NoAnnoList(Op("LengthOp",[])),Var("e")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"UnExp(LengthOp(), e)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("ty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty\"")))),Id)),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("Int",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[App(CallT(SVar("nabl2--generate-constraint"),[CallNoArgs(SVar("nabl2--generate-constraint-default-rule"))],[Var("nabl2_source"),NoAnnoList(Op("ParamsAndType",[NoAnnoList(Tuple([Var("s")])),Var("ty")]))]),Var("e")),NoAnnoList(Op("CEqual",[Var("ty"),NoAnnoList(Op("IntArray",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Type mismatch\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("e"))]))]))]))]))))])),RDefT("nabl2--generate-constraint-default-rule",[],[DefaultVarDec("nabl2_source"),DefaultVarDec("nabl2_args")],Rule(As(Var("nabl2_term"),NoAnnoList(Op("NewObject",[Var("x")]))),Var("nabl2_constraint"),[WithClause(LChoice(Assign(NoAnnoList(Op("ParamsAndType",[As(Var("nabl2_params"),NoAnnoList(Tuple([Var("s")]))),As(Var("nabl2_type"),Var("nabl2_type"))])),Var("nabl2_args")),CallT(SVar("fatal-err"),[],[App(CallNoArgs(SVar("concat-strings")),NoAnnoList(List([NoAnnoList(Str("\"Cannot match expected \"")),NoAnnoList(Str("\"^ (s) : nabl2_type\"")),NoAnnoList(Str("\" with actual \"")),App(CallNoArgs(SVar("nabl2--pp-flat-args")),Var("nabl2_args")),NoAnnoList(Str("\" when matching \"")),NoAnnoList(Str("\"NewObject(x)\"")),NoAnnoList(Str("\" with \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\".\""))])))]))),WithClause(IfThen(CallNoArgs(SVar("nabl2-debug-constraint-generation-hook")),BA(Seq(CallNoArgs(SVar("concat-strings")),CallNoArgs(SVar("debug"))),NoAnnoList(List([NoAnnoList(Str("\"default\"")),NoAnnoList(Str("\" [[ \"")),App(CallNoArgs(SVar("pp-NaBL2-Term")),Var("nabl2_term")),NoAnnoList(Str("\" ^ \"")),App(CallNoArgs(SVar("pp-NaBL2-CTerm")),Var("nabl2_params")),NoAnnoList(Str("\" : \"")),App(CallNoArgs(SVar("pp-NaBL2-Type")),Var("nabl2_type")),NoAnnoList(Str("\" ]]\""))]))))),WithClause(Seq(Assign(Var("d_class"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"d_class\"")))),Seq(Assign(Var("ty"),App(CallT(SVar("nabl2--new-var"),[],[Var("nabl2_source")]),NoAnnoList(Str("\"ty\"")))),Id))),WithClause(Seq(Assign(Var("nabl2_index"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))),GenDynRules([SetDynRule(DynRuleId(RDecNoArgs("AstMetadata")),RuleNoCond(Var("nabl2_index"),NoAnnoList(List([NoAnnoList(Tuple([NoAnnoList(Op("Params",[])),Var("nabl2_params")])),NoAnnoList(Tuple([NoAnnoList(Op("Type",[])),Var("nabl2_type")]))]))))]))),WithClause(Assign(Var("nabl2_constraint"),NoAnnoList(Op("CConj",[NoAnnoList(Op("CEqual",[Var("nabl2_type"),NoAnnoList(Op("ClassType",[Var("d_class")])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CGRef",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Class\""))])),Var("x"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))])),Var("s")])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CResolve",[NoAnnoList(Op("Occurrence",[NoAnnoList(Op("Namespace",[NoAnnoList(Str("\"Class\""))])),Var("x"),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))])),Var("d_class"),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CConj",[NoAnnoList(Op("CPropertyOf",[Var("d_class"),NoAnnoList(Op("Type",[])),Var("ty"),NoAnnoList(Str("\"\"")),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Default",[])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("nabl2_term"))]))])),NoAnnoList(Op("CInequal",[Var("ty"),NoAnnoList(Op("MainType",[])),NoAnnoList(Op("Message",[NoAnnoList(Op("Error",[])),NoAnnoList(Op("Text",[NoAnnoList(Str("\"Cannot instantiate main class\""))])),App(CallNoArgs(SVar("nabl2--get-ast-index")),Var("x"))]))]))]))]))]))]))))]))])])