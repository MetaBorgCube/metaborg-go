module reference/src-gen/pp/minijava-pp

imports
  libstratego-gpp
  libspoofax/sdf/pp
  libspoofax/term/origin
  libstratego-sglr
  reference/src-gen/signatures/minijava-sig


imports
  reference/src-gen/signatures/lex-sig
  reference/src-gen/signatures/expressions-sig
  reference/src-gen/signatures/statements-sig
  reference/src-gen/signatures/classes-sig


imports
  reference/src-gen/pp/lex-pp
  reference/src-gen/pp/expressions-pp
  reference/src-gen/pp/statements-pp
  reference/src-gen/pp/classes-pp


strategies
  prettyprint-example =
    prettyprint-minijava

  prettyprint-minijava =
    fail


strategies
  prettyprint-SDF-start-symbols =
    prettyprint-minijava-start-symbols

  prettyprint-minijava-start-symbols =
    fail


strategies
  prettyprint-minijava-start-symbols =
    prettyprint-minijava-Start

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-Program

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-ClassDecl

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-Exp

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-FieldDecl

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-MainClass

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-MethodDecl

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-Statement

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-Type

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-VarDecl

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-ParamDecl

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-ID

  prettyprint-minijava-start-symbols =
    prettyprint-minijava-INT


strategies
  prettyprint-minijava =
    prettyprint-minijava-Start

  prettyprint-minijava =
    prettyprint-minijava-Program

  prettyprint-minijava =
    prettyprint-minijava-MainClass

  prettyprint-minijava(|sort):
    t -> <prettyprint-minijava-Start>
    where <?"Start"> sort

  prettyprint-minijava(|sort):
    t -> <prettyprint-minijava-Program>
    where <?"Program"> sort

  prettyprint-minijava(|sort):
    t -> <prettyprint-minijava-MainClass>
    where <?"MainClass"> sort

  prettyprint-minijava-Start :
    t1__ -> [ H(
                [SOpt(HS(), "0")]
              , [t1__']
              )
            ]
    where not(is-minijava-Start)
    where t1__' := <pp-one-Z(prettyprint-minijava-Program) <+ pp-one-Z(prettyprint-completion-aux)> t1__

  prettyprint-minijava-Program :
    Program(t1__, t2__) -> [ H(
                               [SOpt(HS(), "0")]
                             , [t1__']
                             )
                           , H(
                               []
                             , [S("")]
                             )
                           , H(
                               [SOpt(HS(), "0")]
                             , [t2__']
                             )
                           ]
    with t1__' := <pp-one-Z(prettyprint-minijava-MainClass) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-V-list(prettyprint-minijava-ClassDecl|"1")
                   <+ pp-one-Z(prettyprint-completion-aux)> t2__

  is-minijava-Program =
    ?Program(_, _)

  minijava-get-indent :
    (t@Program(t1__, t2__), index) -> indent
    where sort := <ia-get-sort> t
          ; <?"Program"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           otherwise :
             indent := ""
         end

  minijava-get-separator :
    (t@Program(t1__, t2__), index) -> separator
    where sort := <ia-get-sort> t
          ; <?"Program"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := "\n\n"
           otherwise :
             separator := ""
         end

  minijava-get-leading-ws :
    (t@Program(t1__, t2__), index) -> ws
    where sort := <ia-get-sort> t
          ; <?"Program"> sort
    with switch !index
           case ?1 :
             ws := ""
           case ?2 :
             ws := "\n\n"
           otherwise :
             ws := ""
         end

  prettyprint-minijava-MainClass :
    MainClass(t1__, t2__, t3__) -> [ H(
                                       [SOpt(HS(), "0")]
                                     , [ S("class ")
                                       , t1__'
                                       , S(" {")
                                       ]
                                     )
                                   , t2__'
                                   , t3__'
                                   , t4__'
                                   , H(
                                       [SOpt(HS(), "0")]
                                     , [S("}")]
                                     )
                                   ]
    with t1__' := <pp-one-Z(prettyprint-minijava-ID) <+ pp-one-Z(prettyprint-completion-aux)> t1__
    with t2__' := <pp-indent(|"2")> [ S("public static void main (String[] ")
                                    , <pp-one-Z(prettyprint-minijava-ID) <+ pp-one-Z(prettyprint-completion-aux)> t2__
                                    , S(") {")
                                    ]
    with t3__' := <pp-indent(|"4")> [ <pp-one-Z(prettyprint-minijava-Statement) <+ pp-one-Z(prettyprint-completion-aux)> t3__
                                    ]
    with t4__' := <pp-indent(|"4")> [S("}")]

  is-minijava-MainClass =
    ?MainClass(_, _, _)

  minijava-get-indent :
    ( t@MainClass(t1__, t2__, t3__)
    , index
    ) -> indent
    where sort := <ia-get-sort> t
          ; <?"MainClass"> sort
    with switch !index
           case ?1 :
             indent := ""
           case ?2 :
             indent := ""
           case ?3 :
             indent := "    "
           otherwise :
             indent := ""
         end

  minijava-get-separator :
    ( t@MainClass(t1__, t2__, t3__)
    , index
    ) -> separator
    where sort := <ia-get-sort> t
          ; <?"MainClass"> sort
    with switch !index
           case ?1 :
             separator := ""
           case ?2 :
             separator := ""
           case ?3 :
             separator := ""
           otherwise :
             separator := ""
         end

  minijava-get-leading-ws :
    ( t@MainClass(t1__, t2__, t3__)
    , index
    ) -> ws
    where sort := <ia-get-sort> t
          ; <?"MainClass"> sort
    with switch !index
           case ?1 :
             ws := " "
           case ?2 :
             ws := " "
           case ?3 :
             ws := "\n    "
           otherwise :
             ws := ""
         end

  is-minijava-Start =
    fail

  is-minijava-Program =
    fail

  is-minijava-MainClass =
    fail

  prettyprint-minijava-Start :
    amb([h|hs]) -> <prettyprint-minijava-Start> h

  prettyprint-minijava-Program :
    amb([h|hs]) -> <prettyprint-minijava-Program> h

  prettyprint-minijava-MainClass :
    amb([h|hs]) -> <prettyprint-minijava-MainClass> h

  prettyprint-minijava-Start :
    Start-Plhdr() -> [ H(
                         [SOpt(HS(), "0")]
                       , [S("[[Start]]")]
                       )
                     ]

  is-minijava-Start =
    ?Start-Plhdr()

  prettyprint-minijava-Program :
    Program-Plhdr() -> [ H(
                           [SOpt(HS(), "0")]
                         , [S("[[Program]]")]
                         )
                       ]

  is-minijava-Program =
    ?Program-Plhdr()

  prettyprint-minijava-ClassDecl :
    ClassDecl-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("[[ClassDecl]]")]
                           )
                         ]

  is-minijava-ClassDecl =
    ?ClassDecl-Plhdr()

  prettyprint-minijava-MainClass :
    MainClass-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("[[MainClass]]")]
                           )
                         ]

  is-minijava-MainClass =
    ?MainClass-Plhdr()

  prettyprint-minijava-ID :
    ID-Plhdr() -> [ H(
                      [SOpt(HS(), "0")]
                    , [S("[[ID]]")]
                    )
                  ]

  is-minijava-ID =
    ?ID-Plhdr()

  prettyprint-minijava-Statement :
    Statement-Plhdr() -> [ H(
                             [SOpt(HS(), "0")]
                           , [S("[[Statement]]")]
                           )
                         ]

  is-minijava-Statement =
    ?Statement-Plhdr()

  prettyprint-minijava-Start :
    Start-Plhdr(_) -> [ H(
                          [SOpt(HS(), "0")]
                        , [S("[[Start]]")]
                        )
                      ]

  is-minijava-Start =
    ?Start-Plhdr(_)

  prettyprint-minijava-Program :
    Program-Plhdr(_) -> [ H(
                            [SOpt(HS(), "0")]
                          , [S("[[Program]]")]
                          )
                        ]

  is-minijava-Program =
    ?Program-Plhdr(_)

  prettyprint-minijava-ClassDecl :
    ClassDecl-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("[[ClassDecl]]")]
                            )
                          ]

  is-minijava-ClassDecl =
    ?ClassDecl-Plhdr(_)

  prettyprint-minijava-MainClass :
    MainClass-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("[[MainClass]]")]
                            )
                          ]

  is-minijava-MainClass =
    ?MainClass-Plhdr(_)

  prettyprint-minijava-ID :
    ID-Plhdr(_) -> [ H(
                       [SOpt(HS(), "0")]
                     , [S("[[ID]]")]
                     )
                   ]

  is-minijava-ID =
    ?ID-Plhdr(_)

  prettyprint-minijava-Statement :
    Statement-Plhdr(_) -> [ H(
                              [SOpt(HS(), "0")]
                            , [S("[[Statement]]")]
                            )
                          ]

  is-minijava-Statement =
    ?Statement-Plhdr(_)

  prettyprint-minijava-ClassDecl :
    ClassDecl-Opt-Plhdr() -> [ H(
                                 []
                               , [S("")]
                               )
                             ]

  is-minijava-ClassDecl =
    ?ClassDecl-Opt-Plhdr()